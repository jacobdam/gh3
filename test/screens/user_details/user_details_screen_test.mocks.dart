// Mocks generated by Mockito 5.4.6 from annotations
// in gh3/test/screens/user_details/user_details_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:gh3/src/screens/user_details/__generated__/user_details_viewmodel.data.gql.dart'
    as _i4;
import 'package:gh3/src/screens/user_details/user_details_viewmodel.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserDetailsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDetailsViewModel extends _i1.Mock
    implements _i2.UserDetailsViewModel {
  MockUserDetailsViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get login =>
      (super.noSuchMethod(
            Invocation.getter(#login),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#login),
            ),
          )
          as String);

  @override
  List<_i4.GGetUserRepositoriesData_user_repositories_nodes>
  get repositoryNodes =>
      (super.noSuchMethod(
            Invocation.getter(#repositoryNodes),
            returnValue:
                <_i4.GGetUserRepositoriesData_user_repositories_nodes>[],
          )
          as List<_i4.GGetUserRepositoriesData_user_repositories_nodes>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get hasMoreRepositories =>
      (super.noSuchMethod(
            Invocation.getter(#hasMoreRepositories),
            returnValue: false,
          )
          as bool);

  @override
  bool get isEmpty =>
      (super.noSuchMethod(Invocation.getter(#isEmpty), returnValue: false)
          as bool);

  @override
  bool get disposed =>
      (super.noSuchMethod(Invocation.getter(#disposed), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> init() =>
      (super.noSuchMethod(
            Invocation.method(#init, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadUserDetails() =>
      (super.noSuchMethod(
            Invocation.method(#loadUserDetails, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadUserRepositories() =>
      (super.noSuchMethod(
            Invocation.method(#loadUserRepositories, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> loadMoreRepositories() =>
      (super.noSuchMethod(
            Invocation.method(#loadMoreRepositories, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<void> refresh() =>
      (super.noSuchMethod(
            Invocation.method(#refresh, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearError() => super.noSuchMethod(
    Invocation.method(#clearError, []),
    returnValueForMissingStub: null,
  );

  @override
  void onDispose() => super.noSuchMethod(
    Invocation.method(#onDispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
}
