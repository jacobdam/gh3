import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:gh3/src/ui-system/tools/comparison/spacing_comparison_screen.dart';
import 'package:gh3/src/ui-system/theme/gh_theme.dart';

void main() {
  group('SpacingComparisonScreen', () {
    testWidgets('displays screen title correctly', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      expect(find.text('Spacing Standardization'), findsOneWidget);
    });

    testWidgets('shows improvement highlights', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      expect(find.text('Key Improvements'), findsOneWidget);
      expect(
        find.text('Standardized all spacing to 4dp grid system'),
        findsOneWidget,
      );
      expect(
        find.text('Fixed activity card double padding issues'),
        findsOneWidget,
      );
      expect(
        find.text('Consistent 16dp page margins across all screens'),
        findsOneWidget,
      );
      expect(
        find.text('Professional visual hierarchy with proper spacing'),
        findsOneWidget,
      );
      expect(
        find.text('Eliminated random spacing values (7dp, 15dp, 25dp)'),
        findsOneWidget,
      );
    });

    testWidgets('has Before and After tabs', (WidgetTester tester) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      expect(find.text('Before'), findsOneWidget);
      expect(find.text('After'), findsOneWidget);
    });

    testWidgets('shows before description correctly', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      expect(
        find.text(
          'Inconsistent spacing with varying measurements and double padding issues',
        ),
        findsOneWidget,
      );
    });

    testWidgets('can switch to after tab and shows after description', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Tap the After tab
      await tester.tap(find.text('After'));
      await tester.pumpAndSettle();

      expect(
        find.text(
          'Consistent 4dp grid system throughout with proper spacing hierarchy',
        ),
        findsOneWidget,
      );
    });

    testWidgets('before tab shows inconsistent spacing examples', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Should show content indicating spacing issues
      expect(
        find.textContaining('Inconsistent spacing values'),
        findsOneWidget,
      );
      expect(find.text('Quick Actions'), findsOneWidget);
      expect(find.text('Recent Activity'), findsOneWidget);
    });

    testWidgets('after tab shows 4dp grid system and standardized spacing', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Switch to After tab
      await tester.tap(find.text('After'));
      await tester.pumpAndSettle();

      // Should show grid system explanation
      expect(find.text('4dp Grid System'), findsOneWidget);
      expect(find.text('4dp'), findsWidgets);
      expect(find.text('8dp'), findsWidgets);
      expect(find.text('12dp'), findsWidgets);
      expect(find.text('16dp'), findsWidgets);
      expect(find.text('20dp'), findsWidgets);
      expect(find.text('24dp'), findsWidgets);
      expect(find.text('32dp'), findsWidgets);
    });

    testWidgets('shows user content in both views', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Should show user info in before view
      expect(find.text('User Name'), findsOneWidget);
      expect(find.text('@username'), findsOneWidget);

      // Switch to After tab
      await tester.tap(find.text('After'));
      await tester.pumpAndSettle();

      // Should show user info in after view too
      expect(find.text('User Name'), findsOneWidget);
      expect(find.text('@username'), findsOneWidget);
    });

    testWidgets('shows activity examples in both views', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Should show activity content in before view
      expect(find.text('Activity Item'), findsOneWidget);
      expect(find.textContaining('demonstrates'), findsOneWidget);

      // Switch to After tab
      await tester.tap(find.text('After'));
      await tester.pumpAndSettle();

      // Should show activity content in after view
      expect(find.text('Activity Item'), findsOneWidget);
      expect(find.textContaining('demonstrates'), findsOneWidget);
    });

    testWidgets('shows spacing reference in after view', (
      WidgetTester tester,
    ) async {
      await tester.pumpWidget(
        MaterialApp(
          theme: GHTheme.lightTheme(),
          home: const SpacingComparisonScreen(),
        ),
      );

      // Switch to After tab
      await tester.tap(find.text('After'));
      await tester.pumpAndSettle();

      // Should show spacing usage descriptions
      expect(find.text('Micro spacing (icon gaps)'), findsOneWidget);
      expect(find.text('Small spacing (element gaps)'), findsOneWidget);
      expect(find.text('Medium spacing (section padding)'), findsOneWidget);
      expect(find.text('Standard spacing (card padding)'), findsOneWidget);
      expect(find.text('Large spacing (section margins)'), findsOneWidget);
      expect(find.text('XL spacing (screen padding)'), findsOneWidget);
      expect(find.text('XXL spacing (major sections)'), findsOneWidget);
    });
  });
}
